// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "openbeacon.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ObTracking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObTracking_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObProximityTagPower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObProximityTagPower_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObProximityTag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObProximityTag_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObProximityLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObProximityLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObTag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObTag_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ObUnit_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_openbeacon_2eproto() {
  protobuf_AddDesc_openbeacon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "openbeacon.proto");
  GOOGLE_CHECK(file != NULL);
  ObTracking_descriptor_ = file->message_type(0);
  static const int ObTracking_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, reader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, tx_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, area_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, building_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, installation_id_),
  };
  ObTracking_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObTracking_descriptor_,
      ObTracking::default_instance_,
      ObTracking_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTracking, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObTracking));
  ObProximityTagPower_descriptor_ = file->message_type(1);
  static const int ObProximityTagPower_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTagPower, power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTagPower, count_),
  };
  ObProximityTagPower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObProximityTagPower_descriptor_,
      ObProximityTagPower::default_instance_,
      ObProximityTagPower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTagPower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTagPower, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTagPower, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObProximityTagPower));
  ObProximityTag_descriptor_ = file->message_type(2);
  static const int ObProximityTag_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTag, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTag, power_),
  };
  ObProximityTag_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObProximityTag_descriptor_,
      ObProximityTag::default_instance_,
      ObProximityTag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTag, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTag, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityTag, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObProximityTag));
  ObProximityLog_descriptor_ = file->message_type(3);
  static const int ObProximityLog_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityLog, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityLog, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityLog, tag_),
  };
  ObProximityLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObProximityLog_descriptor_,
      ObProximityLog::default_instance_,
      ObProximityLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityLog, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObProximityLog, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObProximityLog));
  ObTag_descriptor_ = file->message_type(4);
  static const int ObTag_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, tag_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, tag_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, tag_power_cycles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, tag_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, forwarder_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, forwarder_storage_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, rx_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, tracking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, proximity_),
  };
  ObTag_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObTag_descriptor_,
      ObTag::default_instance_,
      ObTag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObTag, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObTag));
  ObUnit_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_openbeacon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObTracking_descriptor_, &ObTracking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObProximityTagPower_descriptor_, &ObProximityTagPower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObProximityTag_descriptor_, &ObProximityTag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObProximityLog_descriptor_, &ObProximityLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObTag_descriptor_, &ObTag::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_openbeacon_2eproto() {
  delete ObTracking::default_instance_;
  delete ObTracking_reflection_;
  delete ObProximityTagPower::default_instance_;
  delete ObProximityTagPower_reflection_;
  delete ObProximityTag::default_instance_;
  delete ObProximityTag_reflection_;
  delete ObProximityLog::default_instance_;
  delete ObProximityLog_reflection_;
  delete ObTag::default_instance_;
  delete ObTag_reflection_;
}

void protobuf_AddDesc_openbeacon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020openbeacon.proto\"\303\001\n\nObTracking\022\t\n\001x\030\001"
    " \001(\021\022\t\n\001y\030\002 \001(\021\022\t\n\001z\030\003 \001(\021\022\025\n\004unit\030\004 \001(\016"
    "2\007.ObUnit\022\021\n\treader_id\030\005 \003(\r\022\023\n\013tx_stren"
    "gth\030\006 \001(\r\022\017\n\007area_id\030\007 \001(\r\022\017\n\007room_id\030\010 "
    "\001(\r\022\023\n\013building_id\030\t \001(\r\022\027\n\017installation"
    "_id\030\n \001(\r*\005\010d\020\200\001\":\n\023ObProximityTagPower\022"
    "\r\n\005power\030\001 \001(\r\022\r\n\005count\030\002 \001(\r*\005\010d\020\200\001\"H\n\016"
    "ObProximityTag\022\n\n\002id\030\001 \002(\r\022#\n\005power\030\002 \003("
    "\0132\024.ObProximityTagPower*\005\010d\020\200\001\"U\n\016ObProx"
    "imityLog\022\014\n\004time\030\001 \002(\r\022\020\n\010duration\030\002 \002(\r"
    "\022\034\n\003tag\030\003 \003(\0132\017.ObProximityTag*\005\010d\020\200\001\"\352\001"
    "\n\005ObTag\022\016\n\006tag_id\030\001 \001(\r\022\020\n\010tag_time\030\002 \001("
    "\r\022\030\n\020tag_power_cycles\030\003 \001(\r\022\024\n\014tag_stren"
    "gth\030\004 \001(\r\022\024\n\014forwarder_id\030\005 \003(\r\022\036\n\026forwa"
    "rder_storage_time\030\006 \001(\r\022\017\n\007rx_time\030\007 \001(\004"
    "\022\035\n\010tracking\030\016 \001(\0132\013.ObTracking\022\"\n\tproxi"
    "mity\030\017 \003(\0132\017.ObProximityLog*\005\010d\020\200\001*\246\001\n\006O"
    "bUnit\022\020\n\014OB_UNIT_NONE\020\000\022\021\n\rOB_UNIT_PIXEL"
    "\020\001\022\026\n\022OB_UNIT_MILLIMETER\020\002\022\026\n\022OB_UNIT_CE"
    "NTIMETER\020\003\022\021\n\rOB_UNIT_METER\020\004\022\020\n\014OB_UNIT"
    "_INCH\020\005\022\020\n\014OB_UNIT_FEET\020\006\022\020\n\014OB_UNIT_YAR"
    "D\020\007", 843);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openbeacon.proto", &protobuf_RegisterTypes);
  ObTracking::default_instance_ = new ObTracking();
  ObProximityTagPower::default_instance_ = new ObProximityTagPower();
  ObProximityTag::default_instance_ = new ObProximityTag();
  ObProximityLog::default_instance_ = new ObProximityLog();
  ObTag::default_instance_ = new ObTag();
  ObTracking::default_instance_->InitAsDefaultInstance();
  ObProximityTagPower::default_instance_->InitAsDefaultInstance();
  ObProximityTag::default_instance_->InitAsDefaultInstance();
  ObProximityLog::default_instance_->InitAsDefaultInstance();
  ObTag::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_openbeacon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_openbeacon_2eproto {
  StaticDescriptorInitializer_openbeacon_2eproto() {
    protobuf_AddDesc_openbeacon_2eproto();
  }
} static_descriptor_initializer_openbeacon_2eproto_;

const ::google::protobuf::EnumDescriptor* ObUnit_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObUnit_descriptor_;
}
bool ObUnit_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ObTracking::kXFieldNumber;
const int ObTracking::kYFieldNumber;
const int ObTracking::kZFieldNumber;
const int ObTracking::kUnitFieldNumber;
const int ObTracking::kReaderIdFieldNumber;
const int ObTracking::kTxStrengthFieldNumber;
const int ObTracking::kAreaIdFieldNumber;
const int ObTracking::kRoomIdFieldNumber;
const int ObTracking::kBuildingIdFieldNumber;
const int ObTracking::kInstallationIdFieldNumber;
#endif  // !_MSC_VER

ObTracking::ObTracking()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObTracking::InitAsDefaultInstance() {
}

ObTracking::ObTracking(const ObTracking& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObTracking::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  unit_ = 0;
  tx_strength_ = 0u;
  area_id_ = 0u;
  room_id_ = 0u;
  building_id_ = 0u;
  installation_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObTracking::~ObTracking() {
  SharedDtor();
}

void ObTracking::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObTracking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObTracking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObTracking_descriptor_;
}

const ObTracking& ObTracking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_openbeacon_2eproto();  return *default_instance_;
}

ObTracking* ObTracking::default_instance_ = NULL;

ObTracking* ObTracking::New() const {
  return new ObTracking;
}

void ObTracking::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    x_ = 0;
    y_ = 0;
    z_ = 0;
    unit_ = 0;
    tx_strength_ = 0u;
    area_id_ = 0u;
    room_id_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    building_id_ = 0u;
    installation_id_ = 0u;
  }
  reader_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObTracking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }
      
      // optional sint32 y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }
      
      // optional sint32 z = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &z_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_unit;
        break;
      }
      
      // optional .ObUnit unit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unit:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (ObUnit_IsValid(value)) {
            set_unit(static_cast< ObUnit >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reader_id;
        break;
      }
      
      // repeated uint32 reader_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_reader_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_reader_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reader_id;
        if (input->ExpectTag(48)) goto parse_tx_strength;
        break;
      }
      
      // optional uint32 tx_strength = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tx_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tx_strength_)));
          _set_bit(5);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_area_id;
        break;
      }
      
      // optional uint32 area_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_area_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
          _set_bit(6);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_room_id;
        break;
      }
      
      // optional uint32 room_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          _set_bit(7);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_building_id;
        break;
      }
      
      // optional uint32 building_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_building_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &building_id_)));
          _set_bit(8);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_installation_id;
        break;
      }
      
      // optional uint32 installation_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_installation_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &installation_id_)));
          _set_bit(9);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((800u <= tag && tag < 1024u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObTracking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional sint32 x = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->x(), output);
  }
  
  // optional sint32 y = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->y(), output);
  }
  
  // optional sint32 z = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->z(), output);
  }
  
  // optional .ObUnit unit = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->unit(), output);
  }
  
  // repeated uint32 reader_id = 5;
  for (int i = 0; i < this->reader_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->reader_id(i), output);
  }
  
  // optional uint32 tx_strength = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tx_strength(), output);
  }
  
  // optional uint32 area_id = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->area_id(), output);
  }
  
  // optional uint32 room_id = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->room_id(), output);
  }
  
  // optional uint32 building_id = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->building_id(), output);
  }
  
  // optional uint32 installation_id = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->installation_id(), output);
  }
  
  // Extension range [100, 128)
  _extensions_.SerializeWithCachedSizes(
      100, 128, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObTracking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional sint32 x = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->x(), target);
  }
  
  // optional sint32 y = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->y(), target);
  }
  
  // optional sint32 z = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->z(), target);
  }
  
  // optional .ObUnit unit = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->unit(), target);
  }
  
  // repeated uint32 reader_id = 5;
  for (int i = 0; i < this->reader_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->reader_id(i), target);
  }
  
  // optional uint32 tx_strength = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tx_strength(), target);
  }
  
  // optional uint32 area_id = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->area_id(), target);
  }
  
  // optional uint32 room_id = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->room_id(), target);
  }
  
  // optional uint32 building_id = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->building_id(), target);
  }
  
  // optional uint32 installation_id = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->installation_id(), target);
  }
  
  // Extension range [100, 128)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 128, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObTracking::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->x());
    }
    
    // optional sint32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->y());
    }
    
    // optional sint32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->z());
    }
    
    // optional .ObUnit unit = 4;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit());
    }
    
    // optional uint32 tx_strength = 6;
    if (has_tx_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tx_strength());
    }
    
    // optional uint32 area_id = 7;
    if (has_area_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->area_id());
    }
    
    // optional uint32 room_id = 8;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 building_id = 9;
    if (has_building_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->building_id());
    }
    
    // optional uint32 installation_id = 10;
    if (has_installation_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->installation_id());
    }
    
  }
  // repeated uint32 reader_id = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->reader_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->reader_id(i));
    }
    total_size += 1 * this->reader_id_size() + data_size;
  }
  
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObTracking::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObTracking* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObTracking*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObTracking::MergeFrom(const ObTracking& from) {
  GOOGLE_CHECK_NE(&from, this);
  reader_id_.MergeFrom(from.reader_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_x(from.x());
    }
    if (from._has_bit(1)) {
      set_y(from.y());
    }
    if (from._has_bit(2)) {
      set_z(from.z());
    }
    if (from._has_bit(3)) {
      set_unit(from.unit());
    }
    if (from._has_bit(5)) {
      set_tx_strength(from.tx_strength());
    }
    if (from._has_bit(6)) {
      set_area_id(from.area_id());
    }
    if (from._has_bit(7)) {
      set_room_id(from.room_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_building_id(from.building_id());
    }
    if (from._has_bit(9)) {
      set_installation_id(from.installation_id());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObTracking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObTracking::CopyFrom(const ObTracking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObTracking::IsInitialized() const {
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ObTracking::Swap(ObTracking* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(unit_, other->unit_);
    reader_id_.Swap(&other->reader_id_);
    std::swap(tx_strength_, other->tx_strength_);
    std::swap(area_id_, other->area_id_);
    std::swap(room_id_, other->room_id_);
    std::swap(building_id_, other->building_id_);
    std::swap(installation_id_, other->installation_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ObTracking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObTracking_descriptor_;
  metadata.reflection = ObTracking_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObProximityTagPower::kPowerFieldNumber;
const int ObProximityTagPower::kCountFieldNumber;
#endif  // !_MSC_VER

ObProximityTagPower::ObProximityTagPower()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObProximityTagPower::InitAsDefaultInstance() {
}

ObProximityTagPower::ObProximityTagPower(const ObProximityTagPower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObProximityTagPower::SharedCtor() {
  _cached_size_ = 0;
  power_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObProximityTagPower::~ObProximityTagPower() {
  SharedDtor();
}

void ObProximityTagPower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObProximityTagPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObProximityTagPower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObProximityTagPower_descriptor_;
}

const ObProximityTagPower& ObProximityTagPower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_openbeacon_2eproto();  return *default_instance_;
}

ObProximityTagPower* ObProximityTagPower::default_instance_ = NULL;

ObProximityTagPower* ObProximityTagPower::New() const {
  return new ObProximityTagPower;
}

void ObProximityTagPower::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    power_ = 0u;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObProximityTagPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 power = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((800u <= tag && tag < 1024u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObProximityTagPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 power = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->power(), output);
  }
  
  // optional uint32 count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }
  
  // Extension range [100, 128)
  _extensions_.SerializeWithCachedSizes(
      100, 128, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObProximityTagPower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 power = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->power(), target);
  }
  
  // optional uint32 count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }
  
  // Extension range [100, 128)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 128, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObProximityTagPower::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 power = 1;
    if (has_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->power());
    }
    
    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }
    
  }
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObProximityTagPower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObProximityTagPower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObProximityTagPower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObProximityTagPower::MergeFrom(const ObProximityTagPower& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_power(from.power());
    }
    if (from._has_bit(1)) {
      set_count(from.count());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObProximityTagPower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObProximityTagPower::CopyFrom(const ObProximityTagPower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObProximityTagPower::IsInitialized() const {
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ObProximityTagPower::Swap(ObProximityTagPower* other) {
  if (other != this) {
    std::swap(power_, other->power_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ObProximityTagPower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObProximityTagPower_descriptor_;
  metadata.reflection = ObProximityTagPower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObProximityTag::kIdFieldNumber;
const int ObProximityTag::kPowerFieldNumber;
#endif  // !_MSC_VER

ObProximityTag::ObProximityTag()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObProximityTag::InitAsDefaultInstance() {
}

ObProximityTag::ObProximityTag(const ObProximityTag& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObProximityTag::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObProximityTag::~ObProximityTag() {
  SharedDtor();
}

void ObProximityTag::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObProximityTag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObProximityTag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObProximityTag_descriptor_;
}

const ObProximityTag& ObProximityTag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_openbeacon_2eproto();  return *default_instance_;
}

ObProximityTag* ObProximityTag::default_instance_ = NULL;

ObProximityTag* ObProximityTag::New() const {
  return new ObProximityTag;
}

void ObProximityTag::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  power_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObProximityTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_power;
        break;
      }
      
      // repeated .ObProximityTagPower power = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_power:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_power()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_power;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((800u <= tag && tag < 1024u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObProximityTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // repeated .ObProximityTagPower power = 2;
  for (int i = 0; i < this->power_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->power(i), output);
  }
  
  // Extension range [100, 128)
  _extensions_.SerializeWithCachedSizes(
      100, 128, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObProximityTag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // repeated .ObProximityTagPower power = 2;
  for (int i = 0; i < this->power_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->power(i), target);
  }
  
  // Extension range [100, 128)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 128, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObProximityTag::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
  }
  // repeated .ObProximityTagPower power = 2;
  total_size += 1 * this->power_size();
  for (int i = 0; i < this->power_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->power(i));
  }
  
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObProximityTag::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObProximityTag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObProximityTag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObProximityTag::MergeFrom(const ObProximityTag& from) {
  GOOGLE_CHECK_NE(&from, this);
  power_.MergeFrom(from.power_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_id(from.id());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObProximityTag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObProximityTag::CopyFrom(const ObProximityTag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObProximityTag::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < power_size(); i++) {
    if (!this->power(i).IsInitialized()) return false;
  }
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ObProximityTag::Swap(ObProximityTag* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    power_.Swap(&other->power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ObProximityTag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObProximityTag_descriptor_;
  metadata.reflection = ObProximityTag_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObProximityLog::kTimeFieldNumber;
const int ObProximityLog::kDurationFieldNumber;
const int ObProximityLog::kTagFieldNumber;
#endif  // !_MSC_VER

ObProximityLog::ObProximityLog()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObProximityLog::InitAsDefaultInstance() {
}

ObProximityLog::ObProximityLog(const ObProximityLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObProximityLog::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0u;
  duration_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObProximityLog::~ObProximityLog() {
  SharedDtor();
}

void ObProximityLog::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObProximityLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObProximityLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObProximityLog_descriptor_;
}

const ObProximityLog& ObProximityLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_openbeacon_2eproto();  return *default_instance_;
}

ObProximityLog* ObProximityLog::default_instance_ = NULL;

ObProximityLog* ObProximityLog::New() const {
  return new ObProximityLog;
}

void ObProximityLog::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_ = 0u;
    duration_ = 0u;
  }
  tag_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObProximityLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_duration;
        break;
      }
      
      // required uint32 duration = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_tag;
        break;
      }
      
      // repeated .ObProximityTag tag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tag()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_tag;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((800u <= tag && tag < 1024u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObProximityLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 time = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->time(), output);
  }
  
  // required uint32 duration = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->duration(), output);
  }
  
  // repeated .ObProximityTag tag = 3;
  for (int i = 0; i < this->tag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tag(i), output);
  }
  
  // Extension range [100, 128)
  _extensions_.SerializeWithCachedSizes(
      100, 128, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObProximityLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 time = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->time(), target);
  }
  
  // required uint32 duration = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->duration(), target);
  }
  
  // repeated .ObProximityTag tag = 3;
  for (int i = 0; i < this->tag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tag(i), target);
  }
  
  // Extension range [100, 128)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 128, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObProximityLog::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }
    
    // required uint32 duration = 2;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duration());
    }
    
  }
  // repeated .ObProximityTag tag = 3;
  total_size += 1 * this->tag_size();
  for (int i = 0; i < this->tag_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tag(i));
  }
  
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObProximityLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObProximityLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObProximityLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObProximityLog::MergeFrom(const ObProximityLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  tag_.MergeFrom(from.tag_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_time(from.time());
    }
    if (from._has_bit(1)) {
      set_duration(from.duration());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObProximityLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObProximityLog::CopyFrom(const ObProximityLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObProximityLog::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  for (int i = 0; i < tag_size(); i++) {
    if (!this->tag(i).IsInitialized()) return false;
  }
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ObProximityLog::Swap(ObProximityLog* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(duration_, other->duration_);
    tag_.Swap(&other->tag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ObProximityLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObProximityLog_descriptor_;
  metadata.reflection = ObProximityLog_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObTag::kTagIdFieldNumber;
const int ObTag::kTagTimeFieldNumber;
const int ObTag::kTagPowerCyclesFieldNumber;
const int ObTag::kTagStrengthFieldNumber;
const int ObTag::kForwarderIdFieldNumber;
const int ObTag::kForwarderStorageTimeFieldNumber;
const int ObTag::kRxTimeFieldNumber;
const int ObTag::kTrackingFieldNumber;
const int ObTag::kProximityFieldNumber;
#endif  // !_MSC_VER

ObTag::ObTag()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObTag::InitAsDefaultInstance() {
  tracking_ = const_cast< ::ObTracking*>(&::ObTracking::default_instance());
}

ObTag::ObTag(const ObTag& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObTag::SharedCtor() {
  _cached_size_ = 0;
  tag_id_ = 0u;
  tag_time_ = 0u;
  tag_power_cycles_ = 0u;
  tag_strength_ = 0u;
  forwarder_storage_time_ = 0u;
  rx_time_ = GOOGLE_ULONGLONG(0);
  tracking_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObTag::~ObTag() {
  SharedDtor();
}

void ObTag::SharedDtor() {
  if (this != default_instance_) {
    delete tracking_;
  }
}

void ObTag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObTag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObTag_descriptor_;
}

const ObTag& ObTag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_openbeacon_2eproto();  return *default_instance_;
}

ObTag* ObTag::default_instance_ = NULL;

ObTag* ObTag::New() const {
  return new ObTag;
}

void ObTag::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tag_id_ = 0u;
    tag_time_ = 0u;
    tag_power_cycles_ = 0u;
    tag_strength_ = 0u;
    forwarder_storage_time_ = 0u;
    rx_time_ = GOOGLE_ULONGLONG(0);
    if (_has_bit(7)) {
      if (tracking_ != NULL) tracking_->::ObTracking::Clear();
    }
  }
  forwarder_id_.Clear();
  proximity_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tag_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_id_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_tag_time;
        break;
      }
      
      // optional uint32 tag_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_time_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_tag_power_cycles;
        break;
      }
      
      // optional uint32 tag_power_cycles = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag_power_cycles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_power_cycles_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_tag_strength;
        break;
      }
      
      // optional uint32 tag_strength = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_strength_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_forwarder_id;
        break;
      }
      
      // repeated uint32 forwarder_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_forwarder_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_forwarder_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_forwarder_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_forwarder_id;
        if (input->ExpectTag(48)) goto parse_forwarder_storage_time;
        break;
      }
      
      // optional uint32 forwarder_storage_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_forwarder_storage_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &forwarder_storage_time_)));
          _set_bit(5);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_rx_time;
        break;
      }
      
      // optional uint64 rx_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rx_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rx_time_)));
          _set_bit(6);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_tracking;
        break;
      }
      
      // optional .ObTracking tracking = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tracking()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_proximity;
        break;
      }
      
      // repeated .ObProximityLog proximity = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_proximity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_proximity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_proximity;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((800u <= tag && tag < 1024u)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 tag_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tag_id(), output);
  }
  
  // optional uint32 tag_time = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tag_time(), output);
  }
  
  // optional uint32 tag_power_cycles = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tag_power_cycles(), output);
  }
  
  // optional uint32 tag_strength = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->tag_strength(), output);
  }
  
  // repeated uint32 forwarder_id = 5;
  for (int i = 0; i < this->forwarder_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->forwarder_id(i), output);
  }
  
  // optional uint32 forwarder_storage_time = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->forwarder_storage_time(), output);
  }
  
  // optional uint64 rx_time = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->rx_time(), output);
  }
  
  // optional .ObTracking tracking = 14;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->tracking(), output);
  }
  
  // repeated .ObProximityLog proximity = 15;
  for (int i = 0; i < this->proximity_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->proximity(i), output);
  }
  
  // Extension range [100, 128)
  _extensions_.SerializeWithCachedSizes(
      100, 128, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObTag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 tag_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tag_id(), target);
  }
  
  // optional uint32 tag_time = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tag_time(), target);
  }
  
  // optional uint32 tag_power_cycles = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tag_power_cycles(), target);
  }
  
  // optional uint32 tag_strength = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->tag_strength(), target);
  }
  
  // repeated uint32 forwarder_id = 5;
  for (int i = 0; i < this->forwarder_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->forwarder_id(i), target);
  }
  
  // optional uint32 forwarder_storage_time = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->forwarder_storage_time(), target);
  }
  
  // optional uint64 rx_time = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->rx_time(), target);
  }
  
  // optional .ObTracking tracking = 14;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->tracking(), target);
  }
  
  // repeated .ObProximityLog proximity = 15;
  for (int i = 0; i < this->proximity_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->proximity(i), target);
  }
  
  // Extension range [100, 128)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 128, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObTag::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 tag_id = 1;
    if (has_tag_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tag_id());
    }
    
    // optional uint32 tag_time = 2;
    if (has_tag_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tag_time());
    }
    
    // optional uint32 tag_power_cycles = 3;
    if (has_tag_power_cycles()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tag_power_cycles());
    }
    
    // optional uint32 tag_strength = 4;
    if (has_tag_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tag_strength());
    }
    
    // optional uint32 forwarder_storage_time = 6;
    if (has_forwarder_storage_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->forwarder_storage_time());
    }
    
    // optional uint64 rx_time = 7;
    if (has_rx_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rx_time());
    }
    
    // optional .ObTracking tracking = 14;
    if (has_tracking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracking());
    }
    
  }
  // repeated uint32 forwarder_id = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->forwarder_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->forwarder_id(i));
    }
    total_size += 1 * this->forwarder_id_size() + data_size;
  }
  
  // repeated .ObProximityLog proximity = 15;
  total_size += 1 * this->proximity_size();
  for (int i = 0; i < this->proximity_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->proximity(i));
  }
  
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObTag::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObTag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObTag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObTag::MergeFrom(const ObTag& from) {
  GOOGLE_CHECK_NE(&from, this);
  forwarder_id_.MergeFrom(from.forwarder_id_);
  proximity_.MergeFrom(from.proximity_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_tag_id(from.tag_id());
    }
    if (from._has_bit(1)) {
      set_tag_time(from.tag_time());
    }
    if (from._has_bit(2)) {
      set_tag_power_cycles(from.tag_power_cycles());
    }
    if (from._has_bit(3)) {
      set_tag_strength(from.tag_strength());
    }
    if (from._has_bit(5)) {
      set_forwarder_storage_time(from.forwarder_storage_time());
    }
    if (from._has_bit(6)) {
      set_rx_time(from.rx_time());
    }
    if (from._has_bit(7)) {
      mutable_tracking()->::ObTracking::MergeFrom(from.tracking());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObTag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObTag::CopyFrom(const ObTag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObTag::IsInitialized() const {
  
  if (has_tracking()) {
    if (!this->tracking().IsInitialized()) return false;
  }
  for (int i = 0; i < proximity_size(); i++) {
    if (!this->proximity(i).IsInitialized()) return false;
  }
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ObTag::Swap(ObTag* other) {
  if (other != this) {
    std::swap(tag_id_, other->tag_id_);
    std::swap(tag_time_, other->tag_time_);
    std::swap(tag_power_cycles_, other->tag_power_cycles_);
    std::swap(tag_strength_, other->tag_strength_);
    forwarder_id_.Swap(&other->forwarder_id_);
    std::swap(forwarder_storage_time_, other->forwarder_storage_time_);
    std::swap(rx_time_, other->rx_time_);
    std::swap(tracking_, other->tracking_);
    proximity_.Swap(&other->proximity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ObTag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObTag_descriptor_;
  metadata.reflection = ObTag_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
